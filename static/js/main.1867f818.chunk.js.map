{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","map","visibleTodos","todosFromServer","maxId","sort","a","b","pop","App","useState","formValues","setFormValues","titleError","setTitleError","userError","setUserError","usersFromServer","find","useEffect","action","method","onSubmit","e","preventDefault","hasTitle","trim","hasUser","push","htmlFor","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1867f818.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User | null,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo TodoInfo--${completed ? 'completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useEffect, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst visibleTodos = [...todosFromServer];\nconst maxId = todosFromServer\n  .map(todo => todo.id)\n  .sort((a, b) => a - b).pop() || 0;\n\nexport const App: React.FC = () => {\n  const [formValues, setFormValues] = useState({\n    id: maxId + 1,\n    title: '',\n    completed: false,\n    userId: 0,\n  });\n\n  const [titleError, setTitleError] = useState('');\n  const [userError, setUserError] = useState('');\n\n  const todos: Todo[] = visibleTodos.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const hasTitle = formValues.title.trim() !== '';\n    const hasUser = formValues.userId !== 0;\n\n    if (hasUser && hasTitle) {\n      visibleTodos.push(formValues);\n      setFormValues({\n        ...formValues,\n        id: formValues.id + 1,\n        title: '',\n        userId: 0,\n      });\n\n      return;\n    }\n\n    if (!hasTitle) {\n      setTitleError('Please enter a title');\n      setFormValues({ ...formValues, title: '' });\n    }\n\n    if (!hasUser) {\n      setUserError('Please choose a user');\n    }\n  };\n\n  useEffect(() => {\n  }, [visibleTodos]);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={formValues.title}\n            onChange={(e) => {\n              setTitleError('');\n              setFormValues({ ...formValues, title: e.target.value });\n            }}\n          />\n          <span className=\"error\">{titleError}</span>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            value={formValues.userId}\n            onChange={(e) => {\n              setUserError('');\n              setFormValues({ ...formValues, userId: +e.target.value });\n            }}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n          <span className=\"error\">{userError}</span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}